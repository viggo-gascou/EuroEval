[project]
name = "ScandEval"
version = "15.1.0.dev"
description = "Evaluation of pretrained language models on mono- or multilingual language tasks."
readme = "README.md"
authors = [
    {name = "Dan Saattrup Nielsen", email = "dan.nielsen@alexandra.dk"},
]
maintainers = [
    {name = "Dan Saattrup Nielsen", email = "dan.nielsen@alexandra.dk"},
    {name = "Kenneth Enevoldsen", email = "kenneth.enevoldsen@cas.au.dk"},
]
requires-python = ">=3.10,<4.0"
dependencies = [
    "torch>=2.3.0",
    "pandas>=2.2.0",
    "numpy>=1.23.0,<2.0.0",
    "transformers>=4.47.0",
    "accelerate>=0.34.2",
    "evaluate>=0.4.1",
    "datasets>=2.15.0",
    "click>=8.1.3",
    "pydantic>=2.6.0",
    "termcolor>=2.0.0",
    "seqeval>=1.2.2",
    "python-dotenv>=1.0.1",
    "huggingface-hub>=0.24.0",
    "pyinfer>=0.0.3",
    "sentencepiece>=0.1.96",
    "protobuf~=3.20.0",
    "sacremoses>=0.1.1",
    "more-itertools>=10.5.0",
    "tenacity>=9.0.0",
    "litellm>=1.61.13",
    "rouge-score>=0.1.2",
    "bert-score>=0.3.13",
    "levenshtein>=0.24.0",
    "scikit-learn<1.6.0",
]

[project.optional-dependencies]
generative = [
    "demjson3>=3.0.6",
    "bitsandbytes>=0.43.1; platform_system == 'Linux'",
    "vllm>=0.6.3,<0.6.5; platform_system == 'Linux'",
    "fbgemm-gpu>=1.0.0; platform_system == 'Linux'",
]
human_evaluation = [
    "gradio>=4.26.0",
]
all = [
    "demjson3>=3.0.6",
    "bitsandbytes>=0.43.1; platform_system == 'Linux'",
    "vllm>=0.6.3,<0.6.5; platform_system == 'Linux'",
    "fbgemm-gpu>=1.0.0; platform_system == 'Linux'",
    "gradio>=4.26.0",
]
test = [
    "gradio>=4.26.0",
]

[project.urls]
Repository = "https://github.com/ScandEval/ScandEval"
Issues = "https://github.com/ScandEval/ScandEval/issues"

[project.license]
file = "LICENSE"

[project.scripts]
scandeval = "scandeval.cli:benchmark"
human_evaluate = "scandeval.human_evaluation:main"

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.3",
    "pytest-cov>=5.0.0",
    "pre-commit>=3.8.0",
    "readme-coverage-badger>=0.1.2",
    "click>=8.1.7",
    "ruff>=0.7.1",
    "mypy>=1.13.0",
    "nbstripout>=0.7.1",
    "coverage>=5.5",
    "lxml>=5.1.0",
    "peft>=0.13.2",
    "mkdocs-material>=9.5.45",
    "mkdocs-include-markdown-plugin>=7.0.1",
    "mkdocs-include-dir-to-nav>=1.2.0",
    "mkapi>=3.0.22",
    "pip>=24.3.1",
    "setuptools>=75.6.0",
    "cffi>=1.17.1",
    "cryptography>=44.0.0",
    "pycparser>=2.22",
    "types-aiofiles>=24.1.0.20241221",
    "types-cffi>=1.16.0.20241221",
    "types-pyopenssl>=24.1.0.20240722",
    "types-pytz>=2024.2.0.20241221",
    "types-pyyaml>=6.0.12.20241230",
    "types-redis>=4.6.0.20241004",
    "types-requests>=2.32.0.20241016",
    "types-tabulate>=0.9.0.20241207",
    "types-setuptools>=75.8.0.20250110",
    "types-ujson>=5.10.0.20240515",
]

[tool.ruff]
target-version = "py310"
line-length = 88
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".scandeval_cache",
    ".venv",
]
extend-include = [
    "*.ipynb",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
skip-magic-trailing-comma = true

[tool.ruff.lint]
select = [
    # isort (imports)
    "I",
    # pydocstyle (docstrings)
    "D",
    #Â pycodestyle errors and warnings (PEP8)
    "E",
    "W",
    # flake-annotations (type hints)
    "ANN",
]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = [
    "F401",
]
"src/scripts/main.py" = [
    "I",
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--cov=src/scandeval",
    "--color=yes",
]
xfail_strict = true
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::ImportWarning",
    "ignore::ResourceWarning",
    "ignore::FutureWarning",
]
log_cli_level = "info"
testpaths = [
    "tests",
    "src/scandeval",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
